name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Tests et vérifications
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4
      
    - name: Configuration de Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Installation des dépendances
      run: |
        if [ -f package.json ]; then
          npm ci
        else
          echo "Aucun package.json trouvé, skip de l'installation"
        fi
        
    - name: Exécution des tests
      run: |
        if [ -f package.json ] && npm run test --if-present; then
          npm run test
        else
          echo "Aucun script de test trouvé"
        fi
        
    - name: Vérification du linting
      run: |
        if [ -f package.json ] && npm run lint --if-present; then
          npm run lint
        else
          echo "Aucun script de linting trouvé"
        fi

  build:
    runs-on: ubuntu-latest
    name: Build du projet
    needs: test
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4
      
    - name: Configuration de Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Installation des dépendances
      run: |
        if [ -f package.json ]; then
          npm ci
        else
          echo "Aucun package.json trouvé, skip de l'installation"
        fi
        
    - name: Build du projet
      run: |
        if [ -f package.json ] && npm run build --if-present; then
          npm run build
        else
          echo "Aucun script de build trouvé"
        fi
        
    - name: Upload des artefacts de build
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: build-artifacts
        path: |
          dist/
          build/
          *.zip
          *.tar.gz
        retention-days: 7

  deploy:
    runs-on: ubuntu-latest
    name: Déploiement
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4
      
    - name: Téléchargement des artefacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        
    - name: Déploiement (placeholder)
      run: |
        echo "Déploiement vers la production"
        echo "Ajoutez ici vos étapes de déploiement spécifiques"
        echo "Par exemple: déploiement vers Vercel, Netlify, AWS, etc."
