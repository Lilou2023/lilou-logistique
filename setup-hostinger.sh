#!/bin/bash

# Script de configuration rapide pour le d√©ploiement Hostinger
# Lilou Logistique - Hostinger Quick Setup

echo "üöÄ Configuration rapide du d√©ploiement Hostinger"
echo "================================================"

# V√©rifier que nous sommes dans un repository git
if [ ! -d ".git" ]; then
    echo "‚ùå Erreur: Ce script doit √™tre ex√©cut√© dans un repository git"
    exit 1
fi

# Fonction pour cr√©er la branche hostinger-deploy
create_hostinger_branch() {
    echo ""
    echo "üìã Cr√©ation de la branche hostinger-deploy..."
    
    # V√©rifier si la branche existe d√©j√†
    if git show-ref --verify --quiet refs/heads/hostinger-deploy; then
        echo "‚úÖ La branche hostinger-deploy existe d√©j√†"
    else
        echo "üÜï Cr√©ation de la branche hostinger-deploy..."
        git checkout -b hostinger-deploy
        
        # Pousser la branche vers le repository distant
        if git push -u origin hostinger-deploy; then
            echo "‚úÖ Branche hostinger-deploy cr√©√©e et pouss√©e avec succ√®s"
        else
            echo "‚ö†Ô∏è Impossible de pousser la branche. Vous devrez la pousser manuellement."
            echo "   Commande √† ex√©cuter : git push -u origin hostinger-deploy"
        fi
    fi
}

# Fonction pour tester le d√©ploiement
test_deployment() {
    echo ""
    echo "üß™ Test du d√©ploiement..."
    
    # Retourner √† la branche main
    git checkout main
    
    # Cr√©er un commit vide pour d√©clencher le d√©ploiement
    echo "üìù Cr√©ation d'un commit vide pour d√©clencher le workflow..."
    git commit --allow-empty -m "‚ôªÔ∏è D√©clenchement du workflow Hostinger - Test automatique"
    
    # Pousser vers main
    if git push origin main; then
        echo "‚úÖ Commit de test pouss√© vers main"
        echo ""
        echo "üîó V√©rifiez le d√©ploiement sur GitHub Actions:"
        echo "   https://github.com/Lilou2023/lilou-logistique/actions"
    else
        echo "‚ùå Erreur lors du push vers main"
        return 1
    fi
}

# Fonction pour afficher les informations de configuration
show_configuration_info() {
    echo ""
    echo "üìã Configuration requise dans GitHub:"
    echo "======================================"
    echo ""
    echo "üîë Secrets √† configurer dans GitHub Settings ‚Üí Secrets and variables ‚Üí Actions:"
    echo "   - HOSTINGER_SSH_KEY: Cl√© SSH priv√©e d'Hostinger"
    echo "   - HOSTINGER_HOST: Nom d'h√¥te du serveur (ex: srv123.hostinger.com)"
    echo "   - HOSTINGER_USER: Nom d'utilisateur SSH (ex: u123456789)"
    echo "   - HOSTINGER_DOMAIN: Domaine du site (optionnel)"
    echo ""
    echo "üåê Configuration Hostinger (hPanel):"
    echo "   - Onglet Git ‚Üí Ajouter le d√©p√¥t"
    echo "   - Repository URL: git@github.com:Lilou2023/lilou-logistique.git"
    echo "   - Branch: hostinger-deploy"
    echo "   - Directory: (laisser vide pour public_html)"
    echo ""
    echo "üîí GitHub Deploy Keys:"
    echo "   - Settings ‚Üí Deploy Keys ‚Üí Add Key"
    echo "   - Coller la cl√© SSH publique d'Hostinger"
    echo "   - ‚úÖ Cocher 'Allow write access'"
    echo ""
}

# Fonction pour v√©rifier les pr√©requis
check_prerequisites() {
    echo "üîç V√©rification des pr√©requis..."
    
    # V√©rifier git
    if ! command -v git &> /dev/null; then
        echo "‚ùå Git n'est pas install√©"
        exit 1
    fi
    
    # V√©rifier que nous sommes sur une branche track√©e
    if ! git rev-parse --abbrev-ref @{upstream} &> /dev/null; then
        echo "‚ö†Ô∏è La branche actuelle n'est pas track√©e sur un remote"
        echo "   Assurez-vous d'√™tre sur une branche connect√©e √† GitHub"
    fi
    
    # V√©rifier les fichiers de workflow
    if [ ! -f ".github/workflows/hostinger-deploy.yml" ]; then
        echo "‚ùå Le workflow hostinger-deploy.yml n'existe pas"
        echo "   Assurez-vous que le workflow GitHub Actions est pr√©sent"
        exit 1
    fi
    
    echo "‚úÖ Pr√©requis v√©rifi√©s"
}

# Menu principal
show_menu() {
    echo ""
    echo "üéØ Choisissez une action:"
    echo "1. Cr√©er la branche hostinger-deploy"
    echo "2. Tester le d√©ploiement"
    echo "3. Afficher les informations de configuration"
    echo "4. Tout configurer (1 + 2 + 3)"
    echo "5. Quitter"
    echo ""
    read -p "Votre choix (1-5): " choice
    
    case $choice in
        1)
            create_hostinger_branch
            ;;
        2)
            test_deployment
            ;;
        3)
            show_configuration_info
            ;;
        4)
            create_hostinger_branch
            test_deployment
            show_configuration_info
            ;;
        5)
            echo "üëã Au revoir!"
            exit 0
            ;;
        *)
            echo "‚ùå Choix invalide. Veuillez choisir entre 1 et 5."
            show_menu
            ;;
    esac
}

# Script principal
main() {
    check_prerequisites
    show_menu
    
    echo ""
    echo "üéâ Configuration termin√©e!"
    echo ""
    echo "üìñ Pour plus d'informations, consultez:"
    echo "   - HOSTINGER_DEPLOYMENT_GUIDE.md"
    echo "   - https://github.com/Lilou2023/lilou-logistique/actions"
    echo ""
}

# Lancer le script
main