name: 🚀 Déploiement Hostinger Automatique

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
  workflow_dispatch:

jobs:
  build-and-prepare:
    name: 🔨 Build et Préparation
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v3

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Installation des dépendances
        run: npm ci

      - name: 🔧 Configuration Next.js pour export statique
        run: |
          cat > next.config.js << 'EOF'
          /** @type {import('next').NextConfig} */
          const nextConfig = {
            output: 'export',
            images: {
              unoptimized: true
            },
            trailingSlash: true,
          }
          module.exports = nextConfig
          EOF

      - name: 🏗️ Build statique
        env:
          NODE_ENV: production
          # Variables publiques uniquement (pas de secrets)
          NEXT_PUBLIC_APP_NAME: 'Lilou Logistique'
          NEXT_PUBLIC_APP_VERSION: '1.0.0'
        run: npm run build

      - name: 📁 Préparation des fichiers de déploiement
        run: |
          # Créer le dossier de déploiement
          mkdir -p hostinger-deploy
          
          # Copier les fichiers statiques
          cp -r out/* hostinger-deploy/
          
          # Créer .htaccess pour Apache
          cat > hostinger-deploy/.htaccess << 'EOF'
          # Configuration Apache optimisée pour Next.js statique
          
          Options -MultiViews
          RewriteEngine On
          
          # Redirection www
          RewriteCond %{HTTP_HOST} ^www\.(.*)$ [NC]
          RewriteRule ^(.*)$ https://%1/$1 [R=301,L]
          
          # Force HTTPS
          RewriteCond %{HTTPS} off
          RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
          
          # Gestion des routes Next.js
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteCond %{REQUEST_FILENAME} !-l
          RewriteRule ^([^/]+)/?$ $1.html [L]
          
          # Fallback vers index.html pour les routes dynamiques
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteRule . /index.html [L]
          
          # Headers de sécurité
          <IfModule mod_headers.c>
              Header set X-Frame-Options "SAMEORIGIN"
              Header set X-Content-Type-Options "nosniff"
              Header set X-XSS-Protection "1; mode=block"
              Header set Referrer-Policy "strict-origin-when-cross-origin"
              Header set Permissions-Policy "camera=(), microphone=(), geolocation=()"
          </IfModule>
          
          # Compression Gzip
          <IfModule mod_deflate.c>
              AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/json image/svg+xml
          </IfModule>
          
          # Cache optimisé
          <IfModule mod_expires.c>
              ExpiresActive On
              
              # Images
              ExpiresByType image/jpg "access plus 1 year"
              ExpiresByType image/jpeg "access plus 1 year"
              ExpiresByType image/gif "access plus 1 year"
              ExpiresByType image/png "access plus 1 year"
              ExpiresByType image/webp "access plus 1 year"
              ExpiresByType image/svg+xml "access plus 1 year"
              ExpiresByType image/x-icon "access plus 1 year"
              
              # CSS et JS
              ExpiresByType text/css "access plus 1 month"
              ExpiresByType application/javascript "access plus 1 month"
              ExpiresByType text/javascript "access plus 1 month"
              
              # Fonts
              ExpiresByType font/ttf "access plus 1 year"
              ExpiresByType font/otf "access plus 1 year"
              ExpiresByType font/woff "access plus 1 year"
              ExpiresByType font/woff2 "access plus 1 year"
              ExpiresByType application/font-woff "access plus 1 year"
              
              # HTML
              ExpiresByType text/html "access plus 0 seconds"
          </IfModule>
          
          # Désactiver l'indexation des dossiers
          Options -Indexes
          
          # Protection des fichiers sensibles
          <FilesMatch "^\.">
              Order allow,deny
              Deny from all
          </FilesMatch>
          EOF
          
          # Créer un fichier de déploiement info
          echo "Build date: $(date)" > hostinger-deploy/deploy-info.txt
          echo "Commit: ${{ github.sha }}" >> hostinger-deploy/deploy-info.txt

      - name: 📤 Upload des artefacts
        uses: actions/upload-artifact@v3
        with:
          name: hostinger-files
          path: hostinger-deploy/
          retention-days: 7

      - name: 📋 Instructions de déploiement
        run: |
          echo "================================================"
          echo "✅ Build terminé avec succès!"
          echo "================================================"
          echo ""
          echo "📋 Pour déployer sur Hostinger :"
          echo ""
          echo "1. Téléchargez l'artefact 'hostinger-files' depuis cette action"
          echo "2. Ou utilisez Git dans Hostinger avec ces paramètres :"
          echo "   - Dépôt : https://github.com/${{ github.repository }}.git"
          echo "   - Branche : hostinger-deploy"
          echo "   - Répertoire : (laisser vide pour public_html)"
          echo ""
          echo "================================================"

  create-deploy-branch:
    name: 🌿 Créer branche de déploiement
    needs: build-and-prepare
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 📥 Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: hostinger-files
          path: hostinger-deploy

      - name: 🌿 Créer/Mettre à jour la branche hostinger-deploy
        run: |
          # Configuration Git
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          # Créer ou checkout la branche
          git checkout -B hostinger-deploy
          
          # Nettoyer la branche
          git rm -rf . || true
          
          # Copier les fichiers de déploiement
          cp -r hostinger-deploy/* .
          cp -r hostinger-deploy/.htaccess .
          
          # Ajouter tous les fichiers
          git add -A
          
          # Commit si il y a des changements
          if ! git diff --cached --quiet; then
            git commit -m "🚀 Déploiement automatique - ${{ github.sha }}"
            git push -f origin hostinger-deploy
          else
            echo "Pas de changements à déployer"
          fi
