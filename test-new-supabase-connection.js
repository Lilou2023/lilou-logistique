// Script de test pour v√©rifier la connexion Supabase
// avec les nouvelles credentials

const { createClient } = require('@supabase/supabase-js');

// Charger les variables d'environnement
require('dotenv').config({ path: '.env.local' });

// Configuration Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://ocsxrxcphdknfzihejjd.supabase.co';
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9jc3hyeGNwaGRrbmZ6aWhlampkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQwNjk4MjEsImV4cCI6MjA2OTY0NTgyMX0.ZYvmJCUKcsQWrW2tFRfjcUJ29vca5abK7yg8QG3WkCk';

console.log('üîç Test de connexion Supabase...\n');
console.log('üìä Configuration:');
console.log(`   URL: ${supabaseUrl}`);
console.log(`   Ref: ocsxrxcphdknfzihejjd`);
console.log('');

// Cr√©er le client Supabase
const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testConnection() {
    try {
        // Test 1: V√©rifier la connexion de base
        console.log('‚úÖ Client Supabase cr√©√© avec succ√®s');
        
        // Test 2: Tester une requ√™te simple
        console.log('\nüîÑ Test de requ√™te √† la base de donn√©es...');
        const { data, error } = await supabase
            .from('_test_connection')
            .select('*')
            .limit(1);
        
        if (error && error.code !== 'PGRST116') {
            // PGRST116 = table n'existe pas, ce qui est normal pour un test
            throw error;
        }
        
        console.log('‚úÖ Connexion √† la base de donn√©es r√©ussie');
        
        // Test 3: V√©rifier l'authentification anonyme
        console.log('\nüîÑ Test d\'authentification anonyme...');
        const { data: session, error: authError } = await supabase.auth.getSession();
        
        if (authError) {
            throw authError;
        }
        
        console.log('‚úÖ Authentification anonyme fonctionnelle');
        
        // R√©sum√©
        console.log('\nüéâ SUCC√àS - Toutes les connexions fonctionnent correctement!');
        console.log('\nüìã Prochaines √©tapes:');
        console.log('   1. Mettre √† jour les variables sur Vercel');
        console.log('   2. Migrer les donn√©es si n√©cessaire');
        console.log('   3. Tester l\'application compl√®te');
        
    } catch (error) {
        console.error('\n‚ùå ERREUR:', error.message);
        console.error('\nD√©tails:', error);
        
        console.log('\nüîß Solutions possibles:');
        console.log('   - V√©rifier que les cl√©s sont correctes');
        console.log('   - V√©rifier les param√®tres de s√©curit√© Supabase');
        console.log('   - V√©rifier la configuration r√©seau');
    }
}

// Ex√©cuter le test
testConnection();